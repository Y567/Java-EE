<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--spring整合mybatis-->

    <!--1.我们让spring接管数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据驱动-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!--url-->
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis?characterEncoding=UTF-8"/>
        <!--用户名-->
        <property name="username" value="root"/>
        <!--密码-->
        <property name="password" value="yy5201314"/>
    </bean>

    <!--2.我们要向IOC容器中注入sqlSessionFactory对象,用来生成sqlSession对象（sqlSessionTemplate，这其实是mybatis-spring包的封装）的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--这里既然涉及到数据库，那么肯定需要源的支持-->
        <property name="dataSource" ref="dataSource"/>
        <!--这里我们可以绑定MyBatis的配置文件，让分工比较明确-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--绑定所有的映射文件-->
        <property name="mapperLocations" value="classpath:com/gyy/dao/*.xml"/>
    </bean>

    <!--3.声明式事务控制-->
    <!--注入事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--配置事务属性，即为哪些方法添加事务-->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
            <!--所有的方法都配置-->
            <!--<tx:method name="*"/>-->
        </tx:attributes>
    </tx:advice>

    <!--配置事务的切入，让事务生效-->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut id="point" expression="execution(* com.gyy.dao.impl.*.*(..))"/>
        <!--advice-ref要添加的事务，pointcut-ref需要添加到哪去-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="point"/>
    </aop:config>
</beans>